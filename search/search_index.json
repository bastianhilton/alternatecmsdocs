{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Alternate CMS documentation This documentation is to serve as the knowledgebase for AlternateCMS and officially supported features, setup, deployment, and customazation of your Alternate application. Want a quickstart Learn more about the features - Check out Alternate features in full here . Quick Start Guide - Get started quick with our quick start guide here . Deployment - Deploy your application to various services or even on your own server. Resources - Developer resources are the best way to get started and be successfull with Alternate CMS. Check some out here . Alternate CMS Folder layout .git # This folder holds the details of our github public repository (not apart of the overall application). env # Once you performed virtualenv env in your terminal as mentioned here https://docs.alternatecms.com/quickstart you will see the env folder which holds your application's apps, server details, and other python related tools to get the application to start. media # A folder to hold our media based files such as images, audio, videos, etc. nginx # This folder is to hold our nginx details, which is related to our docker support shop/ # holds our application's details including settings.py folder _pycache_ # Our cache folder. templates/ # The template folder and files where our frontend and backend templates are supported. _init_.py # Important file that is blank but is supported by Django applications to run along with the manage.py file to build our application. asgi.py and wsgi.py # These files tells our server how to run our application. models.py # This is a file that directly imports certain models into our database, it is also influencial file with Graphql. mutations.py, schema.py # These files are how our application supports Graphql and contains queries, mutations, and schema details. settings.py # This is one of the most important files in Django applications. It contains all the details about our applications, services, and other important information to keep our application running. urls.py # Important file that allows our application know how to route certain apps and services to the admin area. .gitignore # This file holds content of what to ignore when pushing changes to github db.sqlite3 # This is our sqlite database, this is only important if you are using sqlite instead of the default Postgresql database. DockerFile # This file contains details needed to launch our application in docker, see the deployment section manage.py # One of the files that our system needs to run. It contains details and commands to launch our application and perform several things such as creating a administrator user, migrating our database, and more. package.json # Useful file for javascript based plugins and apps. package-lock.json # File is important for locking javascript plugins and apps to a certain version number. project.db # Holds details of our database README.md # This appears in the official github repository of our application. It's only function is to explain about our application to those who are visiting our application (can be removed) requirements.txt # An important file that holds all of our apps in one place with pinned version numbers. By running pip install -r requirements.txt command, we can install all of our apps in one go. run.py # Command file that allows our application to run on servers.","title":"Introduction"},{"location":"#welcome-to-alternate-cms-documentation","text":"This documentation is to serve as the knowledgebase for AlternateCMS and officially supported features, setup, deployment, and customazation of your Alternate application.","title":"Welcome to Alternate CMS documentation"},{"location":"#want-a-quickstart","text":"Learn more about the features - Check out Alternate features in full here . Quick Start Guide - Get started quick with our quick start guide here . Deployment - Deploy your application to various services or even on your own server. Resources - Developer resources are the best way to get started and be successfull with Alternate CMS. Check some out here .","title":"Want a quickstart"},{"location":"#alternate-cms-folder-layout","text":".git # This folder holds the details of our github public repository (not apart of the overall application). env # Once you performed virtualenv env in your terminal as mentioned here https://docs.alternatecms.com/quickstart you will see the env folder which holds your application's apps, server details, and other python related tools to get the application to start. media # A folder to hold our media based files such as images, audio, videos, etc. nginx # This folder is to hold our nginx details, which is related to our docker support shop/ # holds our application's details including settings.py folder _pycache_ # Our cache folder. templates/ # The template folder and files where our frontend and backend templates are supported. _init_.py # Important file that is blank but is supported by Django applications to run along with the manage.py file to build our application. asgi.py and wsgi.py # These files tells our server how to run our application. models.py # This is a file that directly imports certain models into our database, it is also influencial file with Graphql. mutations.py, schema.py # These files are how our application supports Graphql and contains queries, mutations, and schema details. settings.py # This is one of the most important files in Django applications. It contains all the details about our applications, services, and other important information to keep our application running. urls.py # Important file that allows our application know how to route certain apps and services to the admin area. .gitignore # This file holds content of what to ignore when pushing changes to github db.sqlite3 # This is our sqlite database, this is only important if you are using sqlite instead of the default Postgresql database. DockerFile # This file contains details needed to launch our application in docker, see the deployment section manage.py # One of the files that our system needs to run. It contains details and commands to launch our application and perform several things such as creating a administrator user, migrating our database, and more. package.json # Useful file for javascript based plugins and apps. package-lock.json # File is important for locking javascript plugins and apps to a certain version number. project.db # Holds details of our database README.md # This appears in the official github repository of our application. It's only function is to explain about our application to those who are visiting our application (can be removed) requirements.txt # An important file that holds all of our apps in one place with pinned version numbers. By running pip install -r requirements.txt command, we can install all of our apps in one go. run.py # Command file that allows our application to run on servers.","title":"Alternate CMS Folder layout"},{"location":"deployment/","text":"Alternate CMS can be deployed anywhere Python is supported Because Alternate CMS is a colleciton of Django based apps working together. It can be deployed anywhere that supports Python (and python framework Django). It also supports all the same web server and deployment tools that support Django and Python, making it easier to deployed. Docker support Because of its flexibility, Alternate has built in Docker support and to get started you have to download docker for your operating system. For windows and Mac, download Docker Desktop here For Linux, you will have to install docker following these guides Once docker is setup on your machine, now just run two commands to build and deploy your system. docker-compose build # Build Alternate CMS docker image to prepare it for Docker deployment docker-compose up -d # Deploys Alternate CMS to Docker (usually takes about 10 minutes depending on your setup and system.) Now access your application at: localhost:8000 (Front-end) localhost:8000/admin (Back-end) Deploy to Amazon AWS Documentation not ready yet. Deploy to Google Cloud Documentation not ready yet. Deploy to Microsoft Azure Documentation not ready yet. Deploy to Heroku Documentation not ready yet. Deploy to Digital Ocean Documentation not ready yet.","title":"Deployment"},{"location":"deployment/#alternate-cms-can-be-deployed-anywhere-python-is-supported","text":"Because Alternate CMS is a colleciton of Django based apps working together. It can be deployed anywhere that supports Python (and python framework Django). It also supports all the same web server and deployment tools that support Django and Python, making it easier to deployed.","title":"Alternate CMS can be deployed anywhere Python is supported"},{"location":"deployment/#docker-support","text":"Because of its flexibility, Alternate has built in Docker support and to get started you have to download docker for your operating system. For windows and Mac, download Docker Desktop here For Linux, you will have to install docker following these guides Once docker is setup on your machine, now just run two commands to build and deploy your system. docker-compose build # Build Alternate CMS docker image to prepare it for Docker deployment docker-compose up -d # Deploys Alternate CMS to Docker (usually takes about 10 minutes depending on your setup and system.) Now access your application at: localhost:8000 (Front-end) localhost:8000/admin (Back-end)","title":"Docker support"},{"location":"deployment/#deploy-to-amazon-aws","text":"Documentation not ready yet.","title":"Deploy to Amazon AWS"},{"location":"deployment/#deploy-to-google-cloud","text":"Documentation not ready yet.","title":"Deploy to Google Cloud"},{"location":"deployment/#deploy-to-microsoft-azure","text":"Documentation not ready yet.","title":"Deploy to Microsoft Azure"},{"location":"deployment/#deploy-to-heroku","text":"Documentation not ready yet.","title":"Deploy to Heroku"},{"location":"deployment/#deploy-to-digital-ocean","text":"Documentation not ready yet.","title":"Deploy to Digital Ocean"},{"location":"quickstart/","text":"Quick Start Guide Alternate CMS is a powerful application that provides flexibility, security, stability, and speed. Quickly see end results with a 10 minute guide. What you need to run Alternate CMS Alternate CMS supports Windows, Linux, and Mac (tested on Windows) Postgresql (also supports Mysql, SQlite, Mongodb) More info here To change database, go to shop/settings.py file and update database section with database you want. You will also need Git , Text Editor such as Visual Studio Code , and Python 3 git clone https://github.com/bastianhilton/Alternate-CMS.git cd Alternate-CMS virutalenv env env\\scripts\\activate (On Linux: source env\\bin\\activate) pip install -r requirements.txt python manage.py migrate python manage.py createsuperuser python manage.py runserver Frontend is located at localhost:8000 Administration area (dashboard) is located at localhost:8000/admin/ Graphql playground is located at localhost:8000/graphql","title":"Quick Start"},{"location":"quickstart/#quick-start-guide","text":"Alternate CMS is a powerful application that provides flexibility, security, stability, and speed. Quickly see end results with a 10 minute guide.","title":"Quick Start Guide"},{"location":"quickstart/#what-you-need-to-run-alternate-cms","text":"Alternate CMS supports Windows, Linux, and Mac (tested on Windows) Postgresql (also supports Mysql, SQlite, Mongodb) More info here To change database, go to shop/settings.py file and update database section with database you want. You will also need Git , Text Editor such as Visual Studio Code , and Python 3 git clone https://github.com/bastianhilton/Alternate-CMS.git cd Alternate-CMS virutalenv env env\\scripts\\activate (On Linux: source env\\bin\\activate) pip install -r requirements.txt python manage.py migrate python manage.py createsuperuser python manage.py runserver Frontend is located at localhost:8000 Administration area (dashboard) is located at localhost:8000/admin/ Graphql playground is located at localhost:8000/graphql","title":"What you need to run Alternate CMS"}]}