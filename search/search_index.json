{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Alternate CMS documentation This documentation is to serve as the knowledgebase for AlternateCMS and officially supported features, setup, deployment, and customazation of your Alternate application. Want a quickstart Learn more about the features - Check out Alternate features in full here . Quick Start Guide - Get started quick with our quick start guide here . Deployment - Deploy your application to various services or even on your own server. Resources - Developer resources are the best way to get started and be successfull with Alternate CMS. Check some out here . Alternate CMS Folder layout .git # This folder holds the details of our github public repository (not apart of the overall application). env # Once you performed virtualenv env in your terminal as mentioned here https://docs.alternatecms.com/quickstart you will see the env folder which holds your application's apps, server details, and other python related tools to get the application to start. media # A folder to hold our media based files such as images, audio, videos, etc. nginx # This folder is to hold our nginx details, which is related to our docker support shop/ # holds our application's details including settings.py folder _pycache_ # Our cache folder. templates/ # The template folder and files where our frontend and backend templates are supported. _init_.py # Important file that is blank but is supported by Django applications to run along with the manage.py file to build our application. asgi.py and wsgi.py # These files tells our server how to run our application. models.py # This is a file that directly imports certain models into our database, it is also influencial file with Graphql. settings.py # This is one of the most important files in Django applications. It contains all the details about our applications, services, and other important information to keep our application running. urls.py # Important file that allows our application know how to route certain apps and services to the admin area. .gitignore # This file holds content of what to ignore when pushing changes to github db.sqlite3 # This is our sqlite database, this is only important if you are using sqlite instead of the default Postgresql database. DockerFile # This file contains details needed to launch our application in docker, see the deployment section manage.py # One of the files that our system needs to run. It contains details and commands to launch our application and perform several things such as creating a administrator user, migrating our database, and more. package.json # Useful file for javascript based plugins and apps. package-lock.json # File is important for locking javascript plugins and apps to a certain version number. project.db # Holds details of our database README.md # This appears in the official github repository of our application. It's only function is to explain about our application to those who are visiting our application (can be removed) requirements.txt # An important file that holds all of our apps in one place with pinned version numbers. By running pip install -r requirements.txt command, we can install all of our apps in one go.","title":"Introduction"},{"location":"#welcome-to-alternate-cms-documentation","text":"This documentation is to serve as the knowledgebase for AlternateCMS and officially supported features, setup, deployment, and customazation of your Alternate application.","title":"Welcome to Alternate CMS documentation"},{"location":"#want-a-quickstart","text":"Learn more about the features - Check out Alternate features in full here . Quick Start Guide - Get started quick with our quick start guide here . Deployment - Deploy your application to various services or even on your own server. Resources - Developer resources are the best way to get started and be successfull with Alternate CMS. Check some out here .","title":"Want a quickstart"},{"location":"#alternate-cms-folder-layout","text":".git # This folder holds the details of our github public repository (not apart of the overall application). env # Once you performed virtualenv env in your terminal as mentioned here https://docs.alternatecms.com/quickstart you will see the env folder which holds your application's apps, server details, and other python related tools to get the application to start. media # A folder to hold our media based files such as images, audio, videos, etc. nginx # This folder is to hold our nginx details, which is related to our docker support shop/ # holds our application's details including settings.py folder _pycache_ # Our cache folder. templates/ # The template folder and files where our frontend and backend templates are supported. _init_.py # Important file that is blank but is supported by Django applications to run along with the manage.py file to build our application. asgi.py and wsgi.py # These files tells our server how to run our application. models.py # This is a file that directly imports certain models into our database, it is also influencial file with Graphql. settings.py # This is one of the most important files in Django applications. It contains all the details about our applications, services, and other important information to keep our application running. urls.py # Important file that allows our application know how to route certain apps and services to the admin area. .gitignore # This file holds content of what to ignore when pushing changes to github db.sqlite3 # This is our sqlite database, this is only important if you are using sqlite instead of the default Postgresql database. DockerFile # This file contains details needed to launch our application in docker, see the deployment section manage.py # One of the files that our system needs to run. It contains details and commands to launch our application and perform several things such as creating a administrator user, migrating our database, and more. package.json # Useful file for javascript based plugins and apps. package-lock.json # File is important for locking javascript plugins and apps to a certain version number. project.db # Holds details of our database README.md # This appears in the official github repository of our application. It's only function is to explain about our application to those who are visiting our application (can be removed) requirements.txt # An important file that holds all of our apps in one place with pinned version numbers. By running pip install -r requirements.txt command, we can install all of our apps in one go.","title":"Alternate CMS Folder layout"},{"location":"deployment/","text":"Alternate CMS can be deployed anywhere Python is supported Because Alternate CMS is a colleciton of Django based apps working together. It can be deployed anywhere that supports Python (and python framework Django). It also supports all the same web server and deployment tools that support Django and Python, making it easier to deployed. Docker support Because of its flexibility, Alternate has built in Docker support and to get started you have to download docker for your operating system. For windows and Mac, download Docker Desktop here For Linux, you will have to install docker following these guides Once docker is setup on your machine, now just run two commands to build and deploy your system. docker-compose build # Build Alternate CMS docker image to prepare it for Docker deployment docker-compose up -d # Deploys Alternate CMS to Docker (usually takes about 10 minutes depending on your setup and system.) Now access your application at: localhost:8000 (Front-end) localhost:8000/admin (Back-end) Deploy using PM2 The following process can be completed on Windows, Mac, and Linux You can install pm2 through npm. Open your terminal Make sure you have Nodejs installed by typing node -v and also npm -v If both are installed then install PM2 with the following commands: $ npm install pm2@latest -g or $ yarn global add pm2 If node isn't install, install it here: https://nodejs.org/en/ Once PM2 is installed, to launch AlternateCMS run these commands: pm2 start ecosystem.config.js now your process is running even if you close your terminal Visit http://localhost:8000 for your frontend and http://localhost:8000/admin/ for your dashboard.","title":"Deployment"},{"location":"deployment/#alternate-cms-can-be-deployed-anywhere-python-is-supported","text":"Because Alternate CMS is a colleciton of Django based apps working together. It can be deployed anywhere that supports Python (and python framework Django). It also supports all the same web server and deployment tools that support Django and Python, making it easier to deployed.","title":"Alternate CMS can be deployed anywhere Python is supported"},{"location":"deployment/#docker-support","text":"Because of its flexibility, Alternate has built in Docker support and to get started you have to download docker for your operating system. For windows and Mac, download Docker Desktop here For Linux, you will have to install docker following these guides Once docker is setup on your machine, now just run two commands to build and deploy your system. docker-compose build # Build Alternate CMS docker image to prepare it for Docker deployment docker-compose up -d # Deploys Alternate CMS to Docker (usually takes about 10 minutes depending on your setup and system.) Now access your application at: localhost:8000 (Front-end) localhost:8000/admin (Back-end)","title":"Docker support"},{"location":"deployment/#deploy-using-pm2","text":"The following process can be completed on Windows, Mac, and Linux You can install pm2 through npm. Open your terminal Make sure you have Nodejs installed by typing node -v and also npm -v If both are installed then install PM2 with the following commands: $ npm install pm2@latest -g","title":"Deploy using PM2"},{"location":"deployment/#or","text":"$ yarn global add pm2 If node isn't install, install it here: https://nodejs.org/en/ Once PM2 is installed, to launch AlternateCMS run these commands: pm2 start ecosystem.config.js now your process is running even if you close your terminal Visit http://localhost:8000 for your frontend and http://localhost:8000/admin/ for your dashboard.","title":"or"},{"location":"graphql/","text":"Graphql Support GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools. How AlternateCMS provides Graphql We use the Graphql-Mesh service by including a .meshrc.yaml file in the root directory of your application. From here you can simply follow the steps below to access your graphql instance. In your terminal, access the root directory of your installation of AlternateCMS. Enter yarn mesh dev and your graphql instance will be available on http://localhost:4000 FAQS What solution does AlternateCMS use for Graphql? We decided to outsource our graphql functionality to the powerful solution Graphql-Mesh. It has proven a viable soltuion because it queries the database, allowing anything added to the AlternateCMS to be immediately turned into a Graphql schema. This solution is faster and more scalable then doing it by hand using other solutions. If I wanted to use my own graphql solution similar to Graphql-Mesh could I? Yes, because Graphql-Mesh is just a plugin to our system. It can be removed or simply not activated. Either way, it won't interfere with any other graphql solutions. Other than Graphql-Mesh, are there other types of solutions similar to it? Yes you have Hasura and Postgraphile which are just a two of many solutions that can query your database directly. Why use Graphql-Mesh instead of Ariadne, Graphene, or another python based solution? Building graphql over an entire application the size of AlternateCMS is no easy task. Its not the most scalable way of doing it and you can run into many issues as the application grows. So enters Graphql-Mesh, a powerful and scalable solution that allows us to turn our entire database into graphql queries, mutations, and subscriptions. How to turn off Graphql in AlternateCMS? Because graphql is provided by Graphql-Mesh in the form of a plugin that sits outside of the actual cms. Graphql can be turned off by simply not running it or removing the Graphql-Mesh files altogether. What features comes with graphql in AlternateCMS? You get support for subscriptions, mutations, and queries like most graphql setups but without coding. Its a graphql layer that sits on top of your database. To find out the features particularly to graphql-mesh, visit: https://www.graphql-mesh.com/ What databases are supported by Graphql-Mesh? Luckily all the databases supported by AlternateCMS and Django are supported. This includes Mysql, SQLite, and Postgres. Other sources are available here: https://www.graphql-mesh.com/docs/getting-started/basic-example under Source Handlers. Where can i go to find out more about Graphql? Visit the official graphql website: https://graphql.org/ I have more questions about Graphql, where can I go? Visit the official graphql website: https://graphql.org/faq/","title":"Graphql"},{"location":"graphql/#graphql-support","text":"GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.","title":"Graphql Support"},{"location":"graphql/#how-alternatecms-provides-graphql","text":"We use the Graphql-Mesh service by including a .meshrc.yaml file in the root directory of your application. From here you can simply follow the steps below to access your graphql instance. In your terminal, access the root directory of your installation of AlternateCMS. Enter yarn mesh dev and your graphql instance will be available on http://localhost:4000","title":"How AlternateCMS provides Graphql"},{"location":"graphql/#faqs","text":"","title":"FAQS"},{"location":"graphql/#what-solution-does-alternatecms-use-for-graphql","text":"We decided to outsource our graphql functionality to the powerful solution Graphql-Mesh. It has proven a viable soltuion because it queries the database, allowing anything added to the AlternateCMS to be immediately turned into a Graphql schema. This solution is faster and more scalable then doing it by hand using other solutions.","title":"What solution does AlternateCMS use for Graphql?"},{"location":"graphql/#if-i-wanted-to-use-my-own-graphql-solution-similar-to-graphql-mesh-could-i","text":"Yes, because Graphql-Mesh is just a plugin to our system. It can be removed or simply not activated. Either way, it won't interfere with any other graphql solutions.","title":"If I wanted to use my own graphql solution similar to Graphql-Mesh could I?"},{"location":"graphql/#other-than-graphql-mesh-are-there-other-types-of-solutions-similar-to-it","text":"Yes you have Hasura and Postgraphile which are just a two of many solutions that can query your database directly.","title":"Other than Graphql-Mesh, are there other types of solutions similar to it?"},{"location":"graphql/#why-use-graphql-mesh-instead-of-ariadne-graphene-or-another-python-based-solution","text":"Building graphql over an entire application the size of AlternateCMS is no easy task. Its not the most scalable way of doing it and you can run into many issues as the application grows. So enters Graphql-Mesh, a powerful and scalable solution that allows us to turn our entire database into graphql queries, mutations, and subscriptions.","title":"Why use Graphql-Mesh instead of Ariadne, Graphene, or another python based solution?"},{"location":"graphql/#how-to-turn-off-graphql-in-alternatecms","text":"Because graphql is provided by Graphql-Mesh in the form of a plugin that sits outside of the actual cms. Graphql can be turned off by simply not running it or removing the Graphql-Mesh files altogether.","title":"How to turn off Graphql in AlternateCMS?"},{"location":"graphql/#what-features-comes-with-graphql-in-alternatecms","text":"You get support for subscriptions, mutations, and queries like most graphql setups but without coding. Its a graphql layer that sits on top of your database. To find out the features particularly to graphql-mesh, visit: https://www.graphql-mesh.com/","title":"What features comes with graphql in AlternateCMS?"},{"location":"graphql/#what-databases-are-supported-by-graphql-mesh","text":"Luckily all the databases supported by AlternateCMS and Django are supported. This includes Mysql, SQLite, and Postgres. Other sources are available here: https://www.graphql-mesh.com/docs/getting-started/basic-example under Source Handlers.","title":"What databases are supported by Graphql-Mesh?"},{"location":"graphql/#where-can-i-go-to-find-out-more-about-graphql","text":"Visit the official graphql website: https://graphql.org/","title":"Where can i go to find out more about Graphql?"},{"location":"graphql/#i-have-more-questions-about-graphql-where-can-i-go","text":"Visit the official graphql website: https://graphql.org/faq/","title":"I have more questions about Graphql, where can I go?"},{"location":"quickstart/","text":"Quick Start Guide Alternate CMS is a powerful application that provides flexibility, security, stability, and speed. Quickly see end results with a 10 minute guide. What you need to run Alternate CMS Alternate CMS supports Windows, Linux, and Mac (tested on Windows) Postgresql (also supports Mysql, SQlite, Mongodb) More info here To change database, go to shop/settings.py file and update database section with database you want. You will also need Git , Text Editor such as Visual Studio Code , and Python 3 git clone https://github.com/bastianhilton/Alternate-CMS.git cd Alternate-CMS virutalenv env env\\scripts\\activate (On Linux: source env\\bin\\activate) pip install -r requirements.txt python manage.py migrate python manage.py createsuperuser python manage.py runserver Frontend is located at localhost:8000 Administration area (dashboard) is located at localhost:8000/admin/","title":"Quick Start"},{"location":"quickstart/#quick-start-guide","text":"Alternate CMS is a powerful application that provides flexibility, security, stability, and speed. Quickly see end results with a 10 minute guide.","title":"Quick Start Guide"},{"location":"quickstart/#what-you-need-to-run-alternate-cms","text":"Alternate CMS supports Windows, Linux, and Mac (tested on Windows) Postgresql (also supports Mysql, SQlite, Mongodb) More info here To change database, go to shop/settings.py file and update database section with database you want. You will also need Git , Text Editor such as Visual Studio Code , and Python 3 git clone https://github.com/bastianhilton/Alternate-CMS.git cd Alternate-CMS virutalenv env env\\scripts\\activate (On Linux: source env\\bin\\activate) pip install -r requirements.txt python manage.py migrate python manage.py createsuperuser python manage.py runserver Frontend is located at localhost:8000 Administration area (dashboard) is located at localhost:8000/admin/","title":"What you need to run Alternate CMS"},{"location":"rest/","text":"Welcome to AlternateCMS Rest API documentation What are Rest APIs? AlternateCMS is built on Django and thus supports the Django Rest Framework. Django REST framework is a powerful and flexible toolkit for building Web APIs. Some reasons you might want to use REST framework: The Web browsable API is a huge usability win for your developers. Authentication policies including packages for OAuth1a and OAuth2. Serialization that supports both ORM and non-ORM data sources. Customizable all the way down - just use regular function-based views if you don't need the more powerful features. Extensive documentation, and great community support. Used and trusted by internationally recognised companies including Mozilla, Red Hat, Heroku, and Eventbrite. How to Access your Rest APIs The fastest way to discover what is available in your application is by visiting localhost:8000/api-auth Learn about the Django Rest Framework Visit https://www.django-rest-framework.org/ for more information Basic Usage of AlternateCMS Rest APIs GET \u200b/api\u200b/ api_list GET \u200b/api\u200b/basket\u200b/ api_basket_list POST \u200b/api\u200b/basket\u200b/add-product\u200b/ Add a certain quantity of a product to the basket. api_basket_add-product_create POST \u200b/api\u200b/basket\u200b/add-product{format} Add a certain quantity of a product to the basket. api_basket_create POST \u200b/api\u200b/basket\u200b/add-voucher\u200b/ Add a voucher to the basket. api_basket_add-voucher_create POST \u200b/api\u200b/basket\u200b/add-voucher{format} Add a voucher to the basket. api_basket_create GET \u200b/api\u200b/basket\u200b/shipping-methods\u200b/ api_basket_shipping-methods_list POST \u200b/api\u200b/basket\u200b/shipping-methods\u200b/ api_basket_shipping-methods_create GET \u200b/api\u200b/basket\u200b/shipping-methods{format} api_basket_read POST \u200b/api\u200b/basket\u200b/shipping-methods{format} api_basket_create GET \u200b/api\u200b/baskets\u200b/ api_baskets_list GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_partial_update DELETE \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_delete GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_partial_update DELETE \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_delete GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}\u200b/ api_baskets_lines_lineattributes_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}\u200b/ api_baskets_lines_lineattributes_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}\u200b/ api_baskets_lines_lineattributes_partial_update GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}{format} api_baskets_lines_lineattributes_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}{format} api_baskets_lines_lineattributes_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}{format} api_baskets_lines_lineattributes_partial_update GET \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_read PUT \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_update PATCH \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_partial_update DELETE \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_delete GET \u200b/api\u200b/baskets\u200b/{id}\u200b/lines\u200b/ Api for adding lines to a basket. api_baskets_lines_list POST \u200b/api\u200b/baskets\u200b/{id}\u200b/lines\u200b/ Api for adding lines to a basket. api_baskets_lines_create GET \u200b/api\u200b/baskets\u200b/{id}\u200b/lines{format} Api for adding lines to a basket. api_baskets_read POST \u200b/api\u200b/baskets\u200b/{id}\u200b/lines{format} Api for adding lines to a basket. api_baskets_create GET \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_read PUT \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_update PATCH \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_partial_update DELETE \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_delete GET \u200b/api\u200b/baskets{format} api_read GET \u200b/api\u200b/basket{format} api_read GET \u200b/api\u200b/categories\u200b/ api_categories_list GET \u200b/api\u200b/categories\u200b/{breadcrumbs}\u200b/ api_categories_read GET \u200b/api\u200b/categories\u200b/{id}\u200b/ api_categories_read GET \u200b/api\u200b/categories\u200b/{id}{format} api_categories_read GET \u200b/api\u200b/categories{format} api_read POST \u200b/api\u200b/checkout\u200b/ Prepare an order for checkout. api_checkout_create POST \u200b/api\u200b/checkout{format} Prepare an order for checkout. api_create GET \u200b/api\u200b/countries\u200b/ api_countries_list GET \u200b/api\u200b/countries\u200b/{iso_3166_1_a2}\u200b/ api_countries_read GET \u200b/api\u200b/countries{format} api_read GET \u200b/api\u200b/login\u200b/ api_login_list POST \u200b/api\u200b/login\u200b/ api_login_create DELETE \u200b/api\u200b/login\u200b/ Destroy the session. api_login_delete GET \u200b/api\u200b/login{format} api_read POST \u200b/api\u200b/login{format} api_create DELETE \u200b/api\u200b/login{format} Destroy the session. api_delete GET \u200b/api\u200b/options\u200b/ api_options_list GET \u200b/api\u200b/options\u200b/{id}\u200b/ api_options_read GET \u200b/api\u200b/options\u200b/{id}{format} api_options_read GET \u200b/api\u200b/options{format} api_read GET \u200b/api\u200b/orderlineattributes\u200b/{id}\u200b/ api_orderlineattributes_read GET \u200b/api\u200b/orderlineattributes\u200b/{id}{format} api_orderlineattributes_read GET \u200b/api\u200b/orderlines\u200b/{id}\u200b/ api_orderlines_read GET \u200b/api\u200b/orderlines\u200b/{id}{format} api_orderlines_read GET \u200b/api\u200b/orders\u200b/ api_orders_list GET \u200b/api\u200b/orders\u200b/{id}\u200b/ api_orders_read GET \u200b/api\u200b/orders\u200b/{id}\u200b/lines\u200b/ api_orders_lines_list GET \u200b/api\u200b/orders\u200b/{id}\u200b/lines{format} api_orders_read GET \u200b/api\u200b/orders\u200b/{id}{format} api_orders_read GET \u200b/api\u200b/orders{format} api_read GET \u200b/api\u200b/products\u200b/ api_products_list GET \u200b/api\u200b/products\u200b/{id}\u200b/ api_products_read GET \u200b/api\u200b/products\u200b/{id}\u200b/availability\u200b/ api_products_availability_read GET \u200b/api\u200b/products\u200b/{id}\u200b/availability{format} api_products_read GET \u200b/api\u200b/products\u200b/{id}\u200b/price\u200b/ api_products_price_read GET \u200b/api\u200b/products\u200b/{id}\u200b/price{format} api_products_read GET \u200b/api\u200b/products\u200b/{id}\u200b/stockrecords\u200b/ api_products_stockrecords_list GET \u200b/api\u200b/products\u200b/{id}\u200b/stockrecords{format} api_products_read GET \u200b/api\u200b/products\u200b/{id}{format} api_products_read GET \u200b/api\u200b/products\u200b/{product_pk}\u200b/stockrecords\u200b/{id}\u200b/ api_products_stockrecords_read GET \u200b/api\u200b/products\u200b/{product_pk}\u200b/stockrecords\u200b/{id}{format} api_products_stockrecords_read GET \u200b/api\u200b/products{format} api_read GET \u200b/api\u200b/ranges\u200b/ api_ranges_list GET \u200b/api\u200b/ranges\u200b/{id}\u200b/ api_ranges_read GET \u200b/api\u200b/ranges\u200b/{id}{format} api_ranges_read GET \u200b/api\u200b/ranges{format} api_read POST \u200b/api\u200b/register\u200b/ API for registering users api_register_create POST \u200b/api\u200b/register{format} API for registering users api_create GET \u200b/api\u200b/useraddresses\u200b/ api_useraddresses_list POST \u200b/api\u200b/useraddresses\u200b/ api_useraddresses_create GET \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_read PUT \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_update PATCH \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_partial_update DELETE \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_delete GET \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_read PUT \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_update PATCH \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_partial_update DELETE \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_delete GET \u200b/api\u200b/useraddresses{format} api_read POST \u200b/api\u200b/useraddresses{format} api_create GET \u200b/api\u200b/users\u200b/{id}\u200b/ api_users_read GET \u200b/api\u200b/users\u200b/{id}{format} api_users_read GET \u200b/api\u200b/{format} api_read comments POST \u200b/comments\u200b/api\u200b/comment\u200b/ comments_api_comment_create POST \u200b/comments\u200b/api\u200b/feedback\u200b/ comments_api_feedback_create POST \u200b/comments\u200b/api\u200b/flag\u200b/ comments_api_flag_create POST \u200b/comments\u200b/api\u200b/preview\u200b/ comments_api_preview_create GET \u200b/comments\u200b/api\u200b/{content_type}\u200b/{object_pk}\u200b/ comments_api_read GET \u200b/comments\u200b/api\u200b/{content_type}\u200b/{object_pk}\u200b/count\u200b/ comments_api_count_list To get all of your Rest APIs, travel to https://(your-domain)/swagger or if hosted locally go to http://localhost:8000/swagger/","title":"Using Rest APIs"},{"location":"rest/#welcome-to-alternatecms-rest-api-documentation","text":"","title":"Welcome to AlternateCMS Rest API documentation"},{"location":"rest/#what-are-rest-apis","text":"AlternateCMS is built on Django and thus supports the Django Rest Framework. Django REST framework is a powerful and flexible toolkit for building Web APIs. Some reasons you might want to use REST framework: The Web browsable API is a huge usability win for your developers. Authentication policies including packages for OAuth1a and OAuth2. Serialization that supports both ORM and non-ORM data sources. Customizable all the way down - just use regular function-based views if you don't need the more powerful features. Extensive documentation, and great community support. Used and trusted by internationally recognised companies including Mozilla, Red Hat, Heroku, and Eventbrite.","title":"What are Rest APIs?"},{"location":"rest/#how-to-access-your-rest-apis","text":"The fastest way to discover what is available in your application is by visiting localhost:8000/api-auth","title":"How to Access your Rest APIs"},{"location":"rest/#learn-about-the-django-rest-framework","text":"Visit https://www.django-rest-framework.org/ for more information","title":"Learn about the Django Rest Framework"},{"location":"rest/#basic-usage-of-alternatecms-rest-apis","text":"GET \u200b/api\u200b/ api_list GET \u200b/api\u200b/basket\u200b/ api_basket_list POST \u200b/api\u200b/basket\u200b/add-product\u200b/ Add a certain quantity of a product to the basket. api_basket_add-product_create POST \u200b/api\u200b/basket\u200b/add-product{format} Add a certain quantity of a product to the basket. api_basket_create POST \u200b/api\u200b/basket\u200b/add-voucher\u200b/ Add a voucher to the basket. api_basket_add-voucher_create POST \u200b/api\u200b/basket\u200b/add-voucher{format} Add a voucher to the basket. api_basket_create GET \u200b/api\u200b/basket\u200b/shipping-methods\u200b/ api_basket_shipping-methods_list POST \u200b/api\u200b/basket\u200b/shipping-methods\u200b/ api_basket_shipping-methods_create GET \u200b/api\u200b/basket\u200b/shipping-methods{format} api_basket_read POST \u200b/api\u200b/basket\u200b/shipping-methods{format} api_basket_create GET \u200b/api\u200b/baskets\u200b/ api_baskets_list GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_partial_update DELETE \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}\u200b/ api_baskets_lines_delete GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_partial_update DELETE \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{id}{format} api_baskets_lines_delete GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}\u200b/ api_baskets_lines_lineattributes_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}\u200b/ api_baskets_lines_lineattributes_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}\u200b/ api_baskets_lines_lineattributes_partial_update GET \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}{format} api_baskets_lines_lineattributes_read PUT \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}{format} api_baskets_lines_lineattributes_update PATCH \u200b/api\u200b/baskets\u200b/{basket_pk}\u200b/lines\u200b/{line_pk}\u200b/lineattributes\u200b/{id}{format} api_baskets_lines_lineattributes_partial_update GET \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_read PUT \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_update PATCH \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_partial_update DELETE \u200b/api\u200b/baskets\u200b/{id}\u200b/ api_baskets_delete GET \u200b/api\u200b/baskets\u200b/{id}\u200b/lines\u200b/ Api for adding lines to a basket. api_baskets_lines_list POST \u200b/api\u200b/baskets\u200b/{id}\u200b/lines\u200b/ Api for adding lines to a basket. api_baskets_lines_create GET \u200b/api\u200b/baskets\u200b/{id}\u200b/lines{format} Api for adding lines to a basket. api_baskets_read POST \u200b/api\u200b/baskets\u200b/{id}\u200b/lines{format} Api for adding lines to a basket. api_baskets_create GET \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_read PUT \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_update PATCH \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_partial_update DELETE \u200b/api\u200b/baskets\u200b/{id}{format} api_baskets_delete GET \u200b/api\u200b/baskets{format} api_read GET \u200b/api\u200b/basket{format} api_read GET \u200b/api\u200b/categories\u200b/ api_categories_list GET \u200b/api\u200b/categories\u200b/{breadcrumbs}\u200b/ api_categories_read GET \u200b/api\u200b/categories\u200b/{id}\u200b/ api_categories_read GET \u200b/api\u200b/categories\u200b/{id}{format} api_categories_read GET \u200b/api\u200b/categories{format} api_read POST \u200b/api\u200b/checkout\u200b/ Prepare an order for checkout. api_checkout_create POST \u200b/api\u200b/checkout{format} Prepare an order for checkout. api_create GET \u200b/api\u200b/countries\u200b/ api_countries_list GET \u200b/api\u200b/countries\u200b/{iso_3166_1_a2}\u200b/ api_countries_read GET \u200b/api\u200b/countries{format} api_read GET \u200b/api\u200b/login\u200b/ api_login_list POST \u200b/api\u200b/login\u200b/ api_login_create DELETE \u200b/api\u200b/login\u200b/ Destroy the session. api_login_delete GET \u200b/api\u200b/login{format} api_read POST \u200b/api\u200b/login{format} api_create DELETE \u200b/api\u200b/login{format} Destroy the session. api_delete GET \u200b/api\u200b/options\u200b/ api_options_list GET \u200b/api\u200b/options\u200b/{id}\u200b/ api_options_read GET \u200b/api\u200b/options\u200b/{id}{format} api_options_read GET \u200b/api\u200b/options{format} api_read GET \u200b/api\u200b/orderlineattributes\u200b/{id}\u200b/ api_orderlineattributes_read GET \u200b/api\u200b/orderlineattributes\u200b/{id}{format} api_orderlineattributes_read GET \u200b/api\u200b/orderlines\u200b/{id}\u200b/ api_orderlines_read GET \u200b/api\u200b/orderlines\u200b/{id}{format} api_orderlines_read GET \u200b/api\u200b/orders\u200b/ api_orders_list GET \u200b/api\u200b/orders\u200b/{id}\u200b/ api_orders_read GET \u200b/api\u200b/orders\u200b/{id}\u200b/lines\u200b/ api_orders_lines_list GET \u200b/api\u200b/orders\u200b/{id}\u200b/lines{format} api_orders_read GET \u200b/api\u200b/orders\u200b/{id}{format} api_orders_read GET \u200b/api\u200b/orders{format} api_read GET \u200b/api\u200b/products\u200b/ api_products_list GET \u200b/api\u200b/products\u200b/{id}\u200b/ api_products_read GET \u200b/api\u200b/products\u200b/{id}\u200b/availability\u200b/ api_products_availability_read GET \u200b/api\u200b/products\u200b/{id}\u200b/availability{format} api_products_read GET \u200b/api\u200b/products\u200b/{id}\u200b/price\u200b/ api_products_price_read GET \u200b/api\u200b/products\u200b/{id}\u200b/price{format} api_products_read GET \u200b/api\u200b/products\u200b/{id}\u200b/stockrecords\u200b/ api_products_stockrecords_list GET \u200b/api\u200b/products\u200b/{id}\u200b/stockrecords{format} api_products_read GET \u200b/api\u200b/products\u200b/{id}{format} api_products_read GET \u200b/api\u200b/products\u200b/{product_pk}\u200b/stockrecords\u200b/{id}\u200b/ api_products_stockrecords_read GET \u200b/api\u200b/products\u200b/{product_pk}\u200b/stockrecords\u200b/{id}{format} api_products_stockrecords_read GET \u200b/api\u200b/products{format} api_read GET \u200b/api\u200b/ranges\u200b/ api_ranges_list GET \u200b/api\u200b/ranges\u200b/{id}\u200b/ api_ranges_read GET \u200b/api\u200b/ranges\u200b/{id}{format} api_ranges_read GET \u200b/api\u200b/ranges{format} api_read POST \u200b/api\u200b/register\u200b/ API for registering users api_register_create POST \u200b/api\u200b/register{format} API for registering users api_create GET \u200b/api\u200b/useraddresses\u200b/ api_useraddresses_list POST \u200b/api\u200b/useraddresses\u200b/ api_useraddresses_create GET \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_read PUT \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_update PATCH \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_partial_update DELETE \u200b/api\u200b/useraddresses\u200b/{id}\u200b/ api_useraddresses_delete GET \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_read PUT \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_update PATCH \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_partial_update DELETE \u200b/api\u200b/useraddresses\u200b/{id}{format} api_useraddresses_delete GET \u200b/api\u200b/useraddresses{format} api_read POST \u200b/api\u200b/useraddresses{format} api_create GET \u200b/api\u200b/users\u200b/{id}\u200b/ api_users_read GET \u200b/api\u200b/users\u200b/{id}{format} api_users_read GET \u200b/api\u200b/{format} api_read comments POST \u200b/comments\u200b/api\u200b/comment\u200b/ comments_api_comment_create POST \u200b/comments\u200b/api\u200b/feedback\u200b/ comments_api_feedback_create POST \u200b/comments\u200b/api\u200b/flag\u200b/ comments_api_flag_create POST \u200b/comments\u200b/api\u200b/preview\u200b/ comments_api_preview_create GET \u200b/comments\u200b/api\u200b/{content_type}\u200b/{object_pk}\u200b/ comments_api_read GET \u200b/comments\u200b/api\u200b/{content_type}\u200b/{object_pk}\u200b/count\u200b/ comments_api_count_list","title":"Basic Usage of AlternateCMS Rest APIs"},{"location":"rest/#to-get-all-of-your-rest-apis-travel-to-httpsyour-domainswagger-or-if-hosted-locally-go-to-httplocalhost8000swagger","text":"","title":"To get all of your Rest APIs, travel to https://(your-domain)/swagger or if hosted locally go to http://localhost:8000/swagger/"}]}